[{"/Users/l/Documents/react/tp_react/src/index.js":"1","/Users/l/Documents/react/tp_react/src/App.js":"2","/Users/l/Documents/react/tp_react/src/reportWebVitals.js":"3","/Users/l/Documents/react/tp_react/src/components/Route.js":"4","/Users/l/Documents/react/tp_react/src/components/DisplayApi1.js":"5","/Users/l/Documents/react/tp_react/src/components/Header.js":"6","/Users/l/Documents/react/tp_react/src/components/Display_git.js":"7","/Users/l/Documents/react/tp_react/src/components/DisplayMonsterFromGit.js":"8"},{"size":500,"mtime":1609957972988,"results":"9","hashOfConfig":"10"},{"size":2342,"mtime":1610319578923,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1609957972989,"results":"12","hashOfConfig":"10"},{"size":126,"mtime":1609958619043,"results":"13","hashOfConfig":"10"},{"size":872,"mtime":1610228316310,"results":"14","hashOfConfig":"10"},{"size":594,"mtime":1610226622875,"results":"15","hashOfConfig":"10"},{"size":1690,"mtime":1610300429157,"results":"16","hashOfConfig":"10"},{"size":1494,"mtime":1610300429170,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"ynidlv",{"filePath":"21","messages":"22","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/Users/l/Documents/react/tp_react/src/index.js",[],["38","39"],"/Users/l/Documents/react/tp_react/src/App.js",["40","41","42","43","44","45","46","47","48","49"],"/Users/l/Documents/react/tp_react/src/reportWebVitals.js",[],"/Users/l/Documents/react/tp_react/src/components/Route.js",[],"/Users/l/Documents/react/tp_react/src/components/DisplayApi1.js",["50"],"import {useEffect, useState} from \"react\";\n\nexport default function Display_api_dofus({monster}) {\n    let [Monster, setMonster] = useState([]);\n\n    useEffect(() => {\n        let lastCalled = true;\n        const fetchData = () => {\n            fetch(`https://fr.touch.dofapi.fr/monsters?filter[where][name]=${monster}`)\n                .then((response) => response.json())\n                .then((data) => lastCalled && setMonster(data));\n\n        };\n        fetchData();\n        return () => {\n            lastCalled = false;\n        };\n    }, [monster]);\n\n    return (\n        <>\n            {Monster.map(({_id, name, imgUrl}) => (\n                <div key={_id}>\n                    <div>\n                        <h2>{name}</h2>\n                    </div>\n                    <div><img src={imgUrl}/></div>\n                </div>\n\n            ))}\n        </>\n\n    );\n}\n","/Users/l/Documents/react/tp_react/src/components/Header.js",[],"/Users/l/Documents/react/tp_react/src/components/Display_git.js",["51","52"],"import {useEffect, useState} from \"react\";\n\nexport default function Display_git({user_git, pseudos, setPseudos}) {\n\n    //Variables d'états pour récupérer le status de l'API\n    let [status, setStatus] = useState(0);\n    let [statusText, setStatusText] = useState(\"\");\n\n    useEffect(() => {\n        let lastCalled = true;\n        const fetchData = () => {\n            fetch(`https://api.github.com/users/${user_git}`)\n                .then((response) => {\n                    setStatus(response.status)\n                    setStatusText(response.statusText)\n                    return response.json()\n                })\n                .then((data) => lastCalled && setPseudos(data))\n        };\n        fetchData();\n        return () => {\n            lastCalled = false;\n        };\n    }, [user_git]);\n\n    // Vérifie qu'on ne sollicite pas trop l'API\n    if (status === 403) {\n        return (\n            <div className=\"error\">\n                {statusText}\n            </div>\n        );\n    }\n    //Vérifie si on a bien rentré un pseudo git dans l'input\n    if (user_git === \"\") {\n        return (<></>);\n    }\n\n    //Vérifie que le pseudo git existe\n    if (!pseudos.id && status === 404) {\n        return (\n            <div className=\"error\">\n                <p>Utilisateur github non-existant</p>\n            </div>\n        );\n    }\n\n    return (\n        <>\n            <h1 key={pseudos.name}>\n                {pseudos.name}\n            </h1>\n            <div className=\"img_github\">\n                <img src={pseudos.avatar_url}/>\n            </div>\n            <div>\n                <h2>Nombre de repos: {pseudos.public_repos}</h2>\n            </div>\n        </>\n    );\n}\n\n\n","/Users/l/Documents/react/tp_react/src/components/DisplayMonsterFromGit.js",["53","54","55","56","57","58","59","60","61","62"],"import Display_api_dofus from \"./DisplayApi1\";\nimport Display_git from \"./Display_git\";\n\nfunction GetTheGoodMonster(repos) {\n    if (repos <= 5)\n        return <Display_api_dofus monster={\"Tronknyde\"}/>\n    else if (repos <= 10)\n        return <Display_api_dofus monster={\"Branche Invocatrice\"}/>\n    else if (repos <= 15)\n        return <Display_api_dofus monster={\"Branche Soignante\"}/>\n    else if (repos <= 20)\n        return <Display_api_dofus monster={\"Arbre Collant\"}/>\n    else if (repos<= 25)\n        return <Display_api_dofus monster={\"Abraknyde\"}/>\n    else if (repos <= 30)\n        return <Display_api_dofus monster={\"Abraknyde Sombre\"}/>\n    else if (repos <= 35)\n        return <Display_api_dofus monster={\"Abraknyde Ancestral\"}/>\n    else if (repos > 35)\n        return <Display_api_dofus monster={\"Chêne Mou\"}/>\n}\n\n\nexport default function DisplayMFG({git_pseudo, pseudos, setPseudos}) {\n\n    if (git_pseudo === \"\"){\n        return (<></>);\n    }\n\n    if (!pseudos.id){\n        return(<>\n            <Display_git user_git={git_pseudo} pseudos={pseudos} setPseudos={setPseudos}/>\n        </>);\n    }\n\n    return (\n        <>\n           <Display_git user_git={git_pseudo} pseudos={pseudos} setPseudos={setPseudos}/>\n            <h1>\n                <span className=\"pseudo_git\">{git_pseudo} </span>\n                est un(e)\n                {GetTheGoodMonster(pseudos.public_repos)}\n           </h1>\n        </>\n    );\n\n}",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":24,"column":17,"nodeType":"69","endLine":24,"endColumn":34},{"ruleId":"67","severity":1,"message":"70","line":30,"column":17,"nodeType":"69","endLine":30,"endColumn":59},{"ruleId":"67","severity":1,"message":"70","line":31,"column":17,"nodeType":"69","endLine":31,"endColumn":69},{"ruleId":"67","severity":1,"message":"70","line":32,"column":17,"nodeType":"69","endLine":32,"endColumn":67},{"ruleId":"67","severity":1,"message":"70","line":33,"column":17,"nodeType":"69","endLine":33,"endColumn":63},{"ruleId":"67","severity":1,"message":"70","line":34,"column":17,"nodeType":"69","endLine":34,"endColumn":59},{"ruleId":"67","severity":1,"message":"70","line":35,"column":17,"nodeType":"69","endLine":35,"endColumn":66},{"ruleId":"67","severity":1,"message":"70","line":36,"column":17,"nodeType":"69","endLine":36,"endColumn":69},{"ruleId":"67","severity":1,"message":"70","line":37,"column":17,"nodeType":"69","endLine":37,"endColumn":59},{"ruleId":"67","severity":1,"message":"71","line":47,"column":17,"nodeType":"69","endLine":47,"endColumn":90},{"ruleId":"72","severity":1,"message":"73","line":27,"column":26,"nodeType":"69","endLine":27,"endColumn":45},{"ruleId":"74","severity":1,"message":"75","line":24,"column":8,"nodeType":"76","endLine":24,"endColumn":18,"suggestions":"77"},{"ruleId":"72","severity":1,"message":"73","line":51,"column":17,"nodeType":"69","endLine":51,"endColumn":48},{"ruleId":"67","severity":1,"message":"70","line":6,"column":16,"nodeType":"69","endLine":6,"endColumn":58},{"ruleId":"67","severity":1,"message":"70","line":8,"column":16,"nodeType":"69","endLine":8,"endColumn":68},{"ruleId":"67","severity":1,"message":"70","line":10,"column":16,"nodeType":"69","endLine":10,"endColumn":66},{"ruleId":"67","severity":1,"message":"70","line":12,"column":16,"nodeType":"69","endLine":12,"endColumn":62},{"ruleId":"67","severity":1,"message":"70","line":14,"column":16,"nodeType":"69","endLine":14,"endColumn":58},{"ruleId":"67","severity":1,"message":"70","line":16,"column":16,"nodeType":"69","endLine":16,"endColumn":65},{"ruleId":"67","severity":1,"message":"70","line":18,"column":16,"nodeType":"69","endLine":18,"endColumn":68},{"ruleId":"67","severity":1,"message":"70","line":20,"column":16,"nodeType":"69","endLine":20,"endColumn":58},{"ruleId":"67","severity":1,"message":"71","line":32,"column":13,"nodeType":"69","endLine":32,"endColumn":91},{"ruleId":"67","severity":1,"message":"71","line":38,"column":12,"nodeType":"69","endLine":38,"endColumn":90},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"react/jsx-pascal-case","Imported JSX component Header_content must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Display_api_dofus must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Display_git must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setPseudos'. Either include it or remove the dependency array. If 'setPseudos' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["80"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [setPseudos, user_git]",{"range":"83","text":"84"},[771,781],"[setPseudos, user_git]"]